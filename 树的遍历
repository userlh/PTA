#include <bits/stdc++.h>
using namespace std;
int potree[100]={0};
int intree[100]={0};
struct tree{
    tree *ltree;
    tree *rtree;
    int data;
};
int N;
tree *createtree(int potree[],int intree[],int n){
    if(n <= 0)
        return NULL;
    tree *T = new tree();
    int root = potree[n-1];
    int k;
    T->data = root;
    for(int i = 0;i < n;i++){
        if(intree[i] == root){
            k = i;
            break;
        }
    }
    T->ltree = createtree(potree,intree,k);
    T->rtree = createtree(potree+k,intree+k+1,n-k-1);
    return T;
}

void print(tree *T){
    tree *q[100],*p;
    int front,rear;
    int num = 0;
    if(T == NULL)
        return;
    front = -1;
    rear = 0;
    q[rear] = T;
    while(front!=rear){
        front++;
        p = q[front];
        cout<<p->data;
        num++;
        if(num < N)
            cout<<" ";
        if(p->ltree != NULL){
            rear++;
            q[rear] = p->ltree;
        }
        if(p->rtree != NULL){
            rear++;
            q[rear] = p->rtree;
        }
    }
}
int main()
{
    int n;
    cin>>n;
    N = n;
    for(int i = 0;i < n;i++){
        cin>>potree[i];
    }
    for(int i = 0;i < n;i++){
        cin>>intree[i];
    }
    tree *T = createtree(potree,intree,n);
    print(T);
	return 0;
}
