#include <bits/stdc++.h>
using namespace std;
int mp[110][110];

int parent[110];

int find_root(int x){
    int root = x;
    if(parent[root] == -1)
        return x;
    while(parent[root] != -1){
        root = parent[root];
    }
    return root;
}

int mer(int x,int y){
    int a = find_root(x);
    int b = find_root(y);
    if(a == b)
        return 0;
    else{
        parent[a] = b;
        return 1;
    }
}

int main(){
    std::ios::sync_with_stdio(false);
    int n,m,k;
    cin>>n>>m>>k;
    memset(mp,0,sizeof(mp));
    memset(parent,-1,sizeof(parent));
    int a,b,c;
    for(int i =0;i < m;i++){
        cin>>a>>b>>c;
        mp[a][b] = mp[b][a] = c;
        if(c == 1)
            mer(a,b);
    }
    while(k--){
        cin>>a>>b;
        if(mp[a][b] == 1)
            cout<<"No problem"<<endl;
        else if(mp[a][b] == -1){
            if(find_root(a) == find_root(b))
                cout<<"OK but..."<<endl;
            else
                cout<<"No way"<<endl;
        }else{
            if(find_root(a) == find_root(b))
                cout<<"No problem"<<endl;
            else
                cout<<"OK"<<endl;
        }
    }


    return 0;
}
