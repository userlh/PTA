#include <bits/stdc++.h>
using namespace std;
int mp[510][510] = {0};
bool vis[510];
int n,m;
void dfs(int v){
    vis[v] = true;
    for(int i = 0;i < n;i++){
        if(!vis[i] && mp[v][i]){
            dfs(i);
        }
    }
}
int lt(){
    int cnt = 0;
    memset(vis,false,sizeof(vis));
    for(int i = 0;i < n;i++){
        if(vis[i] == 0){
            dfs(i);
            cnt++;
           // cout<<cnt<<endl;
        }
    }
    return cnt;
}

int main(){
    std::ios::sync_with_stdio(false);
    int k;
    cin>>n>>m;
    memset(vis,false,sizeof(vis));
    memset(mp,0,sizeof(mp));
    int a,b;
    for(int i = 0;i < m;i++){
        cin>>a>>b;
        mp[a][b] = mp[b][a] = 1;
    }
    int x;
    int ans = lt();
    cin>>k;
    for(int i = 0;i < k;i++){
        cin>>x;
        for(int j = 0;j < n;j++){
            if(mp[x][j] == 1)
                mp[x][j] = mp[j][x] = 0;
        }
        int sum = lt();
        if(sum > ans+1)
            cout<<"Red Alert: City "<<x<<" is lost!"<<endl;
        else
            cout<<"City "<<x<<" is lost."<<endl;
        ans = sum;
    }
    if(k == n)
        cout<<"Game Over."<<endl;
    return 0;
}
